;
; Copyright (C) 2023 The Android Open Source Project
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;      http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
Arc = [                            ; COSE_Encrypt0 [RFC9052 s5.2]
    protected : bstr .cbor ArcProtectedHeaders,
    unprotected : {
        5 : bstr .size 12          ; IV
    },
    ciphertext : bstr    ; Enc(K, bstr .cbor Payload, encoded ArcEncStruct)
]

ArcProtectedHeaders = {
           1 : 3,                  ; Algorithm: AES-GCM mode w/ 256-bit key, 128-bit tag
    ? -70001 : { + Permission }, ; One or more Permissions
    ? -70002 : { + Limitation }, ; One or more Limitations
    ? -70003 : int,   ; Timestamp in milliseconds since some starting point (generally
                      ; the most recent device boot) which all of the applications within
                      ; the secure domain must agree upon
    ? -70004 : bstr .size 16,      ; Nonce (a cryptographic random number of 16 bytes) used in key
                                   ; exchange methods
    ? -70005 : PayloadType,        ; Payload type, if needed to disambiguate, when processing an arc
    ? -70006 : int,                ; Version of the payload structure (if applicable)
    ? -70007 : int,                ; Sequence number (if needed to prevent replay attacks)
    ? -70008 : Direction           ; Direction of the encryption key (i.e. whether it is used to
                                   ; encrypt incoming messages or outgoing messages)
    ? -70009 : bool,               ; "authentication_completed" - this is used during authenticated
                                   ; key exchange to indicate whether signature verification is done
    ? -70010 : bstr .size 32       ; "session_id" computed during the key exchange protocol
}

; Permissions indicate what an arc can be used with.
Permission = &(
    -4770552 : IdentityEncoded,  ; "source_id" - in the operations performed by a source, the
                                 ; source adds its own identity to the permissions of an arc.
    -4770553 : IdentityEncoded,  ; "sink_id" - in the operations performed by a sink, the sink
                                 ; adds its own identity to the permissions of an arc.
    -4770555 : [ +IdentityEncoded ]  ; "minting_allowed" - defines the set of TA identities
                                     ; to whom the payload key is allowed to be minted.
    -4770556 : bool                  ; "deleted_on_biometric_change" - A Boolean value that
                                     ; indicates whether an auth key issued from a biometric TA is
                                     ; invalidated on new biometric enrollment or removal of all
                                     ; biometrics.
)

; Limitations indicate what restrictions are applied on the usage of an arc.
Limitation = &(
    -4770554 : bstr,      ; "challenge" - is added to an arc that encrypts an auth key from a
                          ; channel key, in order to ensure the freshness of the authentication.
                          ; A challenge is issued by a sink (e.g. Keymint TA, Biometric TAs).
)

; INCLUDE Identity.cddl for: Identity
IdentityEncoded = bstr .cbor Identity

Direction = &(
    In:  1,
    Out: 2,
)

PayloadType = &(
    SecretKey: 1,
    Arc: 2,
    ; Any other payload types should also be defined here
)

Payload = &(
    SecretKey,
    Arc,
    ; Any other payload formats should also be defined here
)

SecretKey = &(
    SymmetricKey,
    ECPrivateKey,    ; Private key of a key pair generated for key exchange
)

ECPrivateKey = {              ; COSE_Key [RFC9052 s7]
    1 : 2,                    ; Key type : EC2
    3 : -25,                  ; Algorithm: ECDH ES w/ HKDF 256 - generate key directly
 ?  4 : [7],                  ; Key_ops: [derive key]
   -1 : 1,                    ; Curve: P-256
 ? -2 : bstr,                 ; x coordinate
 ? -3 : bstr,                 ; y coordinate
   -4 : bstr,                 ; private key (d)
}

SymmetricKey = {              ; COSE_Key [RFC9052 s7] - For symmetric key encryption
    1 : 4,                    ; Key type : Symmetric
    3 : 3,                    ; Algorithm : AES-GCM mode w/ 256-bit key, 128-bit tag
    4 : [ 4 ],                ; Key_ops: [decrypt]
   -1 : bstr .size 32,        ; Key value (k)
}

ArcEncStruct = [              ; COSE_Enc_structure [RFC9052 s5.3]
    context   : "Encrypt0",
    protected : bstr .cbor ArcProtectedHeaders,
    external_aad : bstr .size 0,
]

; INCLUDE generateCertificateRequestV2.cddl for: PubKeyEd25519, PubKeyECDSA256, PubKeyECDSA384
; from hardware/interfaces/security/rkp/aidl/android/hardware/security/keymint/
